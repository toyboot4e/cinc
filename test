#!/usr/bin/env bash
#
# Tests run via `make test`. In macOS, it's run with Docker.

cd "$(dirname "$0")"

MAIN_OBJ='./obj/cinc'
ROOT="$(pwd)"

# CAUTION: the expected value must be in [0, 255], i.e. the range of exit status
assert() {
  expected="$1"
  input="$2"

  "$MAIN_OBJ" "$input" > obj/tmp.s
  status="$?"
  if [ $status -ne 0 ] ; then
      echo "Failed to compile \`$input\` with error code \`$status\`";
      exit 1
  fi

  cc obj/tmp.s -o obj/tmp
  ./obj/tmp
  actual="$?"

  if [ "$actual" = "$expected" ]; then
    echo "ok: \`$input\` => $actual"
  else
    echo "err: \`$input\` => $expected expected, but got $actual"
    exit 1
  fi
}

assert 0 0
assert 42 42

# addition and substraction
assert 21 "5+20-4"

# whitespaces (tokenizer)
assert 41 " 12 + 34 - 5 "

# multiplication and division
assert 47 '5+6*7'
assert 15 '5*(9-6)'
assert 4 '(3+5)/2'

# unary operator
assert 15 '-(-3 * +5)'

echo 'all tests passed'

